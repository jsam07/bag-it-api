// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bagit_api.Data;

#nullable disable

namespace bagit_api.Data.Migrations
{
    [DbContext(typeof(BagItDbContext))]
    [Migration("20220329061925_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("bagit_api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("bagit_api.Models.ShoppingList", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsEditable")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("ListId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            ListId = 1,
                            Name = "Test Shopping List"
                        });
                });

            modelBuilder.Entity("bagit_api.Models.ShoppingListProduct", b =>
                {
                    b.Property<int>("ListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingListProduct");
                });

            modelBuilder.Entity("bagit_api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(70)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "test@gmail.com",
                            Username = "test_user"
                        });
                });

            modelBuilder.Entity("bagit_api.Models.UserShoppingList", b =>
                {
                    b.Property<int>("ListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserShoppingList");
                });

            modelBuilder.Entity("bagit_api.Models.ShoppingListProduct", b =>
                {
                    b.HasOne("bagit_api.Models.ShoppingList", "List")
                        .WithMany("ShoppingListProducts")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bagit_api.Models.Product", "Product")
                        .WithMany("ShoppingListProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("bagit_api.Models.UserShoppingList", b =>
                {
                    b.HasOne("bagit_api.Models.ShoppingList", "List")
                        .WithMany("UserShoppingLists")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bagit_api.Models.User", "User")
                        .WithMany("UserShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");

                    b.Navigation("User");
                });

            modelBuilder.Entity("bagit_api.Models.Product", b =>
                {
                    b.Navigation("ShoppingListProducts");
                });

            modelBuilder.Entity("bagit_api.Models.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListProducts");

                    b.Navigation("UserShoppingLists");
                });

            modelBuilder.Entity("bagit_api.Models.User", b =>
                {
                    b.Navigation("UserShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
